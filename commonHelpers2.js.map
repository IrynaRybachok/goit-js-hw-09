{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const formData = {\n    email: \"\",\n    message: \"\",\n}\n\nconst STORAGE_KEY = \"feedback-form-state\";\n\nconst form = document.querySelector(\".feedback-form\");\nconst email = form.elements.email;\nconst message = form.elements.message;\n\npopulateForm();\n\nform.addEventListener(\"input\", handleFormInput);\nform.addEventListener(\"submit\", handleFormSubmit);\n\nfunction handleFormSubmit(event){\n    event.preventDefault();\n\n    if (!email.value || !message.value){\n        alert(\"Fill please all fields\");\n        return;\n    }else{\n        console.log(formData);\n        }\n\n    localStorage.removeItem(STORAGE_KEY);\n    form.reset();\n}\n\nfunction handleFormInput(){\n    formData.email = email.value.trim();\n    formData.message = message.value.trim();\n\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n}\n\nfunction populateForm(){\n    let savedFormData = {};\n\n    try {\n        savedFormData = JSON.parse(localStorage.getItem(STORAGE_KEY));\n    } catch (err){\n        console.log(err);\n        return;\n    }\n\n    if (!savedFormData){\n        return;\n    }\n\n    email.value = savedFormData.email;\n    message.value = savedFormData.message;    \n}\n\n// variant 2\n\n// let formData = {\n//     email: \"\",\n//     message: \"\",\n// }\n\n// const STORAGE_KEY = \"feedback-form-state\";\n\n// const form = document.querySelector(\".feedback-form\");\n\n// populateForm();\n// form.addEventListener(\"input\", handleFormInput);\n// form.addEventListener(\"submit\", handleFormSubmit);\n\n// function handleFormInput(event){\n//     const value = event.target.value.trim();\n//     const key = event.target.name;\n\n//     // витягує з ЛС дані та зберігає їх в formData. А також може додати новий ключ в існуючий обʼєкт\n//     formData = JSON.parse(localStorage.getItem(STORAGE_KEY));\n\n//     if(formData){\n//         formData[key] = value;\n//     } else{\n//         formData = {\n//             [key]: value,\n//         }\n//     }\n//     localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n// }\n\n// function handleFormSubmit(event){\n//     event.preventDefault();\n\n//     if(!form.elements.email.value || !form.elements.message.value){\n//         alert(\"Fill please all fields\");\n//         return;\n//     } else {\n//         console.log(formData)\n//     }\n//     localStorage.removeItem(STORAGE_KEY)\n//     event.currentTarget.reset();\n// }\n\n// function populateForm(){\n//     let sevedFormData = {};\n\n//     try {sevedFormData = JSON.parse(localStorage.getItem(STORAGE_KEY))\n//     }catch(err){\n//         console.log(err);\n//         return;\n//     }\n    \n//     if(!sevedFormData){\n//         return;\n//     }\n\n//     for(const key in sevedFormData){\n//         form.elements[key].value = sevedFormData[key];\n//     }\n// }"],"names":["formData","STORAGE_KEY","form","email","message","populateForm","handleFormInput","handleFormSubmit","event","savedFormData","err"],"mappings":"wFAAA,MAAMA,EAAW,CACb,MAAO,GACP,QAAS,EACb,EAEMC,EAAc,sBAEdC,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAQD,EAAK,SAAS,MACtBE,EAAUF,EAAK,SAAS,QAE9BG,IAEAH,EAAK,iBAAiB,QAASI,CAAe,EAC9CJ,EAAK,iBAAiB,SAAUK,CAAgB,EAEhD,SAASA,EAAiBC,EAAM,CAG5B,GAFAA,EAAM,eAAc,EAEhB,CAACL,EAAM,OAAS,CAACC,EAAQ,MAAM,CAC/B,MAAM,wBAAwB,EAC9B,MACR,MACQ,QAAQ,IAAIJ,CAAQ,EAGxB,aAAa,WAAWC,CAAW,EACnCC,EAAK,MAAK,CACd,CAEA,SAASI,GAAiB,CACtBN,EAAS,MAAQG,EAAM,MAAM,KAAI,EACjCH,EAAS,QAAUI,EAAQ,MAAM,KAAI,EAErC,aAAa,QAAQH,EAAa,KAAK,UAAUD,CAAQ,CAAC,CAC9D,CAEA,SAASK,GAAc,CACnB,IAAII,EAAgB,CAAA,EAEpB,GAAI,CACAA,EAAgB,KAAK,MAAM,aAAa,QAAQR,CAAW,CAAC,CAC/D,OAAQS,EAAI,CACT,QAAQ,IAAIA,CAAG,EACf,MACH,CAEID,IAILN,EAAM,MAAQM,EAAc,MAC5BL,EAAQ,MAAQK,EAAc,QAClC"}